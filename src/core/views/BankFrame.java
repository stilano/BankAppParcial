/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import bank.Account;
import bank.Transaction;
import bank.TransactionType;
import core.models.User;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class BankFrame extends javax.swing.JFrame {
    
    private ArrayList<Account> accounts;
    private ArrayList<Transaction> transactions;
    private ArrayList<User> users;
    
    /**
     * Creates new form BankFrame
     */
    public BankFrame() {
        initComponents();
        this.accounts = new ArrayList<>();
        this.transactions = new ArrayList<>();
        this.users = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backGroundPane = new javax.swing.JTabbedPane();
        registerUserPanel = new javax.swing.JPanel();
        registerUserLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        lastnameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        registerIDTextField = new javax.swing.JTextField();
        registerfirstnameTextField = new javax.swing.JTextField();
        registerlastnameTextField = new javax.swing.JTextField();
        registerageTextField = new javax.swing.JTextField();
        registerUserButton = new javax.swing.JButton();
        createAccountPanel = new javax.swing.JPanel();
        createAccountLabel = new javax.swing.JLabel();
        userIdLabel = new javax.swing.JLabel();
        initialBalanceLabel = new javax.swing.JLabel();
        accountIDTextField = new javax.swing.JTextField();
        initialbalanceTextField = new javax.swing.JTextField();
        createAccountButton = new javax.swing.JButton();
        makeTransactionPanel = new javax.swing.JPanel();
        makeTransactionLabel = new javax.swing.JLabel();
        transactionTypeLabel = new javax.swing.JLabel();
        sourceAccountLabel = new javax.swing.JLabel();
        destinationAccountLabel = new javax.swing.JLabel();
        transactionAmountLabel = new javax.swing.JLabel();
        sourceaccountTextField = new javax.swing.JTextField();
        destinationaccountTextField = new javax.swing.JTextField();
        transactionamountTextField = new javax.swing.JTextField();
        transactiontypeComboBox = new javax.swing.JComboBox<>();
        executeTransactionButton = new javax.swing.JButton();
        userListPanel = new javax.swing.JPanel();
        userListLabel = new javax.swing.JLabel();
        userListPane = new javax.swing.JScrollPane();
        usersListTable = new javax.swing.JTable();
        refreshUserListButton = new javax.swing.JButton();
        accountListPanel = new javax.swing.JPanel();
        accountListLabel = new javax.swing.JLabel();
        accountListPane = new javax.swing.JScrollPane();
        accountsListTable = new javax.swing.JTable();
        refreshAccountListButton = new javax.swing.JButton();
        transactionListPanel = new javax.swing.JPanel();
        transactionListLabel = new javax.swing.JLabel();
        transactionListPane = new javax.swing.JScrollPane();
        transactionsListTable = new javax.swing.JTable();
        refreshTransactionListButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerUserLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registerUserLabel.setText("Register User");

        idLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        idLabel.setText("ID");

        firstnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        firstnameLabel.setText("Firstname");

        lastnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lastnameLabel.setText("Lastname");

        ageLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ageLabel.setText("Age");

        registerUserButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        registerUserButton.setText("Register");
        registerUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerUserPanelLayout = new javax.swing.GroupLayout(registerUserPanel);
        registerUserPanel.setLayout(registerUserPanelLayout);
        registerUserPanelLayout.setHorizontalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(registerUserLabel)
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstnameLabel)
                            .addComponent(lastnameLabel)
                            .addComponent(ageLabel)
                            .addComponent(idLabel))
                        .addGap(18, 18, 18)
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerIDTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(registerlastnameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(registerageTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(registerfirstnameTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(registerUserButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        registerUserPanelLayout.setVerticalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(registerUserLabel)
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerfirstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerlastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageLabel))
                .addGap(18, 18, 18)
                .addComponent(registerUserButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        backGroundPane.addTab("Register User", registerUserPanel);

        createAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        createAccountLabel.setText("Create Account");

        userIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        userIdLabel.setText("User ID");

        initialBalanceLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        initialBalanceLabel.setText("Initial Balance");

        createAccountButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        createAccountButton.setText("Create");
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createAccountPanelLayout = new javax.swing.GroupLayout(createAccountPanel);
        createAccountPanel.setLayout(createAccountPanelLayout);
        createAccountPanelLayout.setHorizontalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(createAccountLabel))
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userIdLabel)
                            .addComponent(initialBalanceLabel))
                        .addGap(18, 18, 18)
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initialbalanceTextField)
                            .addComponent(accountIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(createAccountButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createAccountPanelLayout.setVerticalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(createAccountLabel)
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIdLabel))
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialbalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialBalanceLabel))
                .addGap(18, 18, 18)
                .addComponent(createAccountButton)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        backGroundPane.addTab("Create Account", createAccountPanel);

        makeTransactionLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        makeTransactionLabel.setText("Make Transaction");

        transactionTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        transactionTypeLabel.setText("Type");

        sourceAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sourceAccountLabel.setText("Source Account");

        destinationAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        destinationAccountLabel.setText("Destination Account");

        transactionAmountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        transactionAmountLabel.setText("Amount");

        destinationaccountTextField.setToolTipText("");

        transactiontypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));

        executeTransactionButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        executeTransactionButton.setText("Execute");
        executeTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeTransactionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makeTransactionPanelLayout = new javax.swing.GroupLayout(makeTransactionPanel);
        makeTransactionPanel.setLayout(makeTransactionPanelLayout);
        makeTransactionPanelLayout.setHorizontalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transactionTypeLabel)
                            .addComponent(transactionAmountLabel)
                            .addComponent(destinationAccountLabel)
                            .addComponent(sourceAccountLabel))
                        .addGap(18, 18, 18)
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationaccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sourceaccountTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(transactiontypeComboBox, 0, 485, Short.MAX_VALUE)
                            .addComponent(transactionamountTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(makeTransactionLabel)))
                .addContainerGap())
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(executeTransactionButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        makeTransactionPanelLayout.setVerticalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(makeTransactionLabel)
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactiontypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionTypeLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sourceaccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationaccountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactionamountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionAmountLabel))
                .addGap(18, 18, 18)
                .addComponent(executeTransactionButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        backGroundPane.addTab("Make Transaction", makeTransactionPanel);

        userListLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userListLabel.setText("List Users");

        usersListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Fullname", "Age", "Number of Accounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        userListPane.setViewportView(usersListTable);

        refreshUserListButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        refreshUserListButton.setText("Refresh");
        refreshUserListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshUserListButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userListPanelLayout = new javax.swing.GroupLayout(userListPanel);
        userListPanel.setLayout(userListPanelLayout);
        userListPanelLayout.setHorizontalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(userListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(userListLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshUserListButton)
                        .addGap(88, 88, 88))))
        );
        userListPanelLayout.setVerticalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userListLabel)
                    .addComponent(refreshUserListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        backGroundPane.addTab("List Users", userListPanel);

        accountListLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        accountListLabel.setText("List Accounts");

        accountsListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "User ID", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        accountListPane.setViewportView(accountsListTable);

        refreshAccountListButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        refreshAccountListButton.setText("Refresh");
        refreshAccountListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAccountListButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout accountListPanelLayout = new javax.swing.GroupLayout(accountListPanel);
        accountListPanel.setLayout(accountListPanelLayout);
        accountListPanelLayout.setHorizontalGroup(
            accountListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accountListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(accountListPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(accountListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshAccountListButton)
                .addGap(90, 90, 90))
        );
        accountListPanelLayout.setVerticalGroup(
            accountListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountListPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(accountListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountListLabel)
                    .addComponent(refreshAccountListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(accountListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        backGroundPane.addTab("List Accounts", accountListPanel);

        transactionListLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        transactionListLabel.setText("List Transactions");

        transactionsListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Source Account ID", "Destination Account ID", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionListPane.setViewportView(transactionsListTable);

        refreshTransactionListButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        refreshTransactionListButton.setText("Refresh");
        refreshTransactionListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTransactionListButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transactionListPanelLayout = new javax.swing.GroupLayout(transactionListPanel);
        transactionListPanel.setLayout(transactionListPanelLayout);
        transactionListPanelLayout.setHorizontalGroup(
            transactionListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactionListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(transactionListPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(transactionListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshTransactionListButton)
                .addGap(89, 89, 89))
        );
        transactionListPanelLayout.setVerticalGroup(
            transactionListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionListPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(transactionListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactionListLabel)
                    .addComponent(refreshTransactionListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(transactionListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        backGroundPane.addTab("List Transactions", transactionListPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backGroundPane, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerUserButtonActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(registerIDTextField.getText());
            String firstname = registerfirstnameTextField.getText();
            String lastname = registerlastnameTextField.getText();
            int age = Integer.parseInt(registerageTextField.getText());
            
            this.users.add(new User(id, firstname, lastname, age));
            
            registerIDTextField.setText("");
            registerfirstnameTextField.setText("");
            registerlastnameTextField.setText("");
            registerageTextField.setText("");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_registerUserButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        // TODO add your handling code here:
        try {
            int userId = Integer.parseInt(accountIDTextField.getText());
            double initialBalance = Double.parseDouble(initialbalanceTextField.getText());
            
            User selectedUser = null;
            for (User user : this.users) {
                if (user.getId() == userId && selectedUser == null) {
                    selectedUser = user;
                }
            }
            
            if (selectedUser != null) {
                Random random = new Random();
                int first = random.nextInt(1000);
                int second = random.nextInt(1000000);
                int third = random.nextInt(100);
                
                String accountId = String.format("%03d", first) + "-" + String.format("%06d", second) + "-" + String.format("%02d", third);
                
                this.accounts.add(new Account(accountId, selectedUser, initialBalance));
                
                accountIDTextField.setText("");
                initialbalanceTextField.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void executeTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeTransactionButtonActionPerformed
        // TODO add your handling code here:
        try {
            String type = transactiontypeComboBox.getItemAt(transactiontypeComboBox.getSelectedIndex());
            switch (type) {
                case "Deposit": {
                    String destinationAccountId = destinationaccountTextField.getText();
                    double amount = Double.parseDouble(transactionamountTextField.getText());
                    
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (destinationAccount != null) {
                        destinationAccount.deposit(amount);
                        
                        this.transactions.add(new Transaction(TransactionType.DEPOSIT, null, destinationAccount, amount));
                        
                        sourceaccountTextField.setText("");
                        destinationaccountTextField.setText("");
                        transactionamountTextField.setText("");
                    }
                    break;
                }
                case "Withdraw": {
                    String sourceAccountId = sourceaccountTextField.getText();
                    double amount = Double.parseDouble(transactionamountTextField.getText());
                    
                    Account sourceAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    if (sourceAccount != null && sourceAccount.withdraw(amount)) {
                        this.transactions.add(new Transaction(TransactionType.WITHDRAW, sourceAccount, null, amount));
                        
                        sourceaccountTextField.setText("");
                        destinationaccountTextField.setText("");
                        transactionamountTextField.setText("");
                    }
                    break;
                }
                case "Transfer": {
                    String sourceAccountId = sourceaccountTextField.getText();
                    String destinationAccountId = destinationaccountTextField.getText();
                    double amount = Double.parseDouble(transactionamountTextField.getText());
                    
                    Account sourceAccount = null;
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (sourceAccount != null && destinationAccount != null && sourceAccount.withdraw(amount)) {
                        destinationAccount.deposit(amount);
                        
                        this.transactions.add(new Transaction(TransactionType.TRANSFER, sourceAccount, destinationAccount, amount));
                        
                        sourceaccountTextField.setText("");
                        destinationaccountTextField.setText("");
                        transactionamountTextField.setText("");
                    }
                    break;
                }
                default: {
                    sourceaccountTextField.setText("");
                    destinationaccountTextField.setText("");
                    transactionamountTextField.setText("");
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_executeTransactionButtonActionPerformed

    private void refreshUserListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshUserListButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) usersListTable.getModel();
        model.setRowCount(0);
        
        this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));
        
        for (User user : this.users) {
            model.addRow(new Object[]{user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(), user.getNumAccounts()});
        }
    }//GEN-LAST:event_refreshUserListButtonActionPerformed

    private void refreshAccountListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAccountListButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) accountsListTable.getModel();
        model.setRowCount(0);
        
        this.accounts.sort((obj1, obj2) -> (obj1.getId().compareTo(obj2.getId())));
        
        for (Account account : this.accounts) {
            model.addRow(new Object[]{account.getId(), account.getOwner().getId(), account.getBalance()});
        }
    }//GEN-LAST:event_refreshAccountListButtonActionPerformed

    private void refreshTransactionListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTransactionListButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) transactionsListTable.getModel();
        model.setRowCount(0);
        
        ArrayList<Transaction> transactionsCopy = (ArrayList<Transaction>) this.transactions.clone();
        Collections.reverse(transactionsCopy);
        
        for (Transaction transaction : transactionsCopy) {
            model.addRow(new Object[]{transaction.getType().name(), (transaction.getSourceAccount() != null ? transaction.getSourceAccount().getId() : "None"), (transaction.getDestinationAccount()!= null ? transaction.getDestinationAccount().getId() : "None"), transaction.getAmount()});
        }
    }//GEN-LAST:event_refreshTransactionListButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountIDTextField;
    private javax.swing.JLabel accountListLabel;
    private javax.swing.JScrollPane accountListPane;
    private javax.swing.JPanel accountListPanel;
    private javax.swing.JTable accountsListTable;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTabbedPane backGroundPane;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JLabel createAccountLabel;
    private javax.swing.JPanel createAccountPanel;
    private javax.swing.JLabel destinationAccountLabel;
    private javax.swing.JTextField destinationaccountTextField;
    private javax.swing.JButton executeTransactionButton;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel initialBalanceLabel;
    private javax.swing.JTextField initialbalanceTextField;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JLabel makeTransactionLabel;
    private javax.swing.JPanel makeTransactionPanel;
    private javax.swing.JButton refreshAccountListButton;
    private javax.swing.JButton refreshTransactionListButton;
    private javax.swing.JButton refreshUserListButton;
    private javax.swing.JTextField registerIDTextField;
    private javax.swing.JButton registerUserButton;
    private javax.swing.JLabel registerUserLabel;
    private javax.swing.JPanel registerUserPanel;
    private javax.swing.JTextField registerageTextField;
    private javax.swing.JTextField registerfirstnameTextField;
    private javax.swing.JTextField registerlastnameTextField;
    private javax.swing.JLabel sourceAccountLabel;
    private javax.swing.JTextField sourceaccountTextField;
    private javax.swing.JLabel transactionAmountLabel;
    private javax.swing.JLabel transactionListLabel;
    private javax.swing.JScrollPane transactionListPane;
    private javax.swing.JPanel transactionListPanel;
    private javax.swing.JLabel transactionTypeLabel;
    private javax.swing.JTextField transactionamountTextField;
    private javax.swing.JTable transactionsListTable;
    private javax.swing.JComboBox<String> transactiontypeComboBox;
    private javax.swing.JLabel userIdLabel;
    private javax.swing.JLabel userListLabel;
    private javax.swing.JScrollPane userListPane;
    private javax.swing.JPanel userListPanel;
    private javax.swing.JTable usersListTable;
    // End of variables declaration//GEN-END:variables
}
